<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:s="library://ns.adobe.com/flex/spark" y="{(Application.application.height/2)-(this.height/2)}" x="{(Application.application.width/2)-(this.width/2)}" 
	creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import src.com.selfassessment.controller.TeamController;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.managers.CursorManager;
			import src.com.selfassessment.controller.Controller;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;
			import mx.controls.Alert;
			
			public var popUpAlert:ShowAlert;
			public function CancelCreate():void{
				PopUpManager.removePopUp(this);
			}
			private var LoginService:TeamController = new TeamController(); 
			
			private function init():void{
				if(Application.application.language=="en_US"){
					myDataGrid.setStyle('textAlign','left');
				}
				else{
					myDataGrid.setStyle('textAlign','right');
				}
			}
			
			
			public function CreateStatusFn():void{
				LoginService = new TeamController();
				//Alert.show("test");
				
    			CursorManager.setBusyCursor();
			 	LoginService.insertStatus(txtStatus.text,function(resultArray:Number): void {
				 	if(resultArray!=0){
				 		txtStatus.text="";
				 		//Alert.show("Status Created Successfully");
				 		Alert.show(resourceManager.getString('myResources','statusCreatedSucc'));
				 		LoginService = new TeamController();
		    			CursorManager.setBusyCursor();
					 	LoginService.getStatusDetails(function(resultArray:Array): void {
						 	myDataGrid.dataProvider = resultArray;
						 	CursorManager.removeAllCursors();
						});
				 	}
				 	else{
				 		//Alert.show("Status already exists");
				 		Alert.show(resourceManager.getString('myResources','statusAlreadyExists'));
				 	}
				 	CursorManager.removeAllCursors();
				});
			
        	}
        	
        	public function DeleteRole(event:ListEvent):void{
        		if(event.columnIndex == 1){
        			//Alert.show(resourceManager.getString('myResources','deleteStatus'),"",Alert.YES|Alert.NO,this,DeleteAddLister);
        			popUpAlert = ShowAlert(PopUpManager.createPopUp(this,ShowAlert,true));
					var vbox:VBox=new VBox();
					popUpAlert.mainBox.addChild(vbox);
					var alert:Alert=new Alert();
					vbox.layoutDirection="ltr";
					alert.layoutDirection="ltr";
					alert=Alert.show(resourceManager.getString('myResources','deleteStatus'),"",Alert.YES|Alert.NO,this,DeleteAddLister);
					vbox.addChild(alert);
        		}
        	}
        	
        	public function DeleteAddLister(event:CloseEvent):void{
        		if(event.detail == Alert.YES){
        			LoginService = new TeamController();
					//Alert.show("test");
					
	    			CursorManager.setBusyCursor();
				 	LoginService.deleteStatus(parseInt(myDataGrid.selectedItem.StatusID.toString()),function(resultArray:Number): void {
					 	if(resultArray==1){
					 		//Alert.show("Status Deleted Successfully");
					 		Alert.show(resourceManager.getString('myResources','deletedSucc'));
					 		LoginService = new TeamController();
			    			CursorManager.setBusyCursor();
						 	LoginService.getStatusDetails(function(resultArray:Array): void {
							 	myDataGrid.dataProvider = resultArray;
							 	CursorManager.removeAllCursors();
							});
					 	}
					 	else{
					 		//Alert.show("Activity already exists under this status.So,delete cannot be possible");
					 		Alert.show(resourceManager.getString('myResources','activityAlreadyExists'));
					 	}
					 	CursorManager.removeAllCursors();
					});
        		}
        		PopUpManager.removePopUp(popUpAlert);
        		
        	}
        
			
		]]>
	</mx:Script>
	<mx:VBox borderStyle="solid" borderThickness="3" shadowDistance="8" shadowDirection="right" dropShadowEnabled="true" dropShadowColor="#000000" borderColor="#636e83" width="100%" horizontalAlign="center" verticalAlign="middle" height="100%" styleName="ApplyFontSize" backgroundColor="white">
		<mx:Canvas width="100%" useHandCursor="true" buttonMode="true" mouseDown="{this.startDrag()}" mouseUp="{this.stopDrag()}" height="25" styleName="panel1filled" borderSides="left,right,top" cornerRadius="3" borderStyle="none">
			<mx:Label left="10" fontWeight="bold"  id="lblTitle" text="@Resource(bundle='myResources', key='createStatus')" color="#000506" fontSize="12"/>
			<mx:Image id="btnClose" right="2" top="2" source="@Embed('assets/close.png')" useHandCursor="true" buttonMode="true"  />
		</mx:Canvas>
		<mx:Spacer/>
		<mx:HBox paddingLeft="10">
			<mx:Label text="Status " fontWeight="bold"/>
			<s:TextInput id="txtStatus"  maxChars="20"/>
			<mx:Spacer/>
		</mx:HBox>
		<mx:Spacer/>
		
		<mx:Spacer/>
		<mx:HBox>
			<mx:Spacer width="150"/>
			<mx:Button label="@Resource(bundle='myResources', key='btncreate')" id="btncreate" click="CreateStatusFn()" useHandCursor="true" buttonMode="true"/>
		</mx:HBox>
		<mx:Spacer/>
		<mx:Spacer/>
		<mx:HBox>
			<mx:Spacer/>
			<mx:Spacer/>
			<mx:DataGrid id="myDataGrid" wordWrap="true" resizableColumns="true" itemClick="DeleteRole(event)" width="350" height="240"  allowMultipleSelection="false" draggableColumns="false">
				<mx:columns>
				
		        	<mx:DataGridColumn headerWordWrap="true" dataField="Status" wordWrap="true" headerText="@Resource(bundle='myResources', key='status')" width="120">
		        		<mx:itemRenderer>
	                		<mx:Component> 
		                        <mx:Label paddingLeft="5" text="{data.Status}"/> 
	                		</mx:Component> 
	            		</mx:itemRenderer> 
					</mx:DataGridColumn>
		        	
			       <mx:DataGridColumn headerText="@Resource(bundle='myResources', key='delete')" dataField="delete" width="40">
						<mx:itemRenderer>
	                		<mx:Component> 
		                        <mx:Image scaleContent="false" horizontalAlign="center" source="@Embed('assets/newdeleteicon.png')" useHandCursor="true" buttonMode="true"/> 
	                		</mx:Component> 
	            		</mx:itemRenderer> 
					</mx:DataGridColumn>
					
				</mx:columns>
		    </mx:DataGrid>
		    <mx:Spacer/>
		    <mx:Spacer/>
		</mx:HBox>
		
		
		<mx:Spacer/>
		<mx:Spacer/>
		
		
	</mx:VBox>
</mx:Canvas>
